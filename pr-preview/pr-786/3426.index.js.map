{"version":3,"file":"3426.index.js","mappings":"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","sources":["webpack://thebe/../../node_modules/@lezer/xml/dist/index.js","webpack://thebe/../../node_modules/@codemirror/lang-xml/dist/index.js"],"sourcesContent":["import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst StartTag = 1,\n  StartCloseTag = 2,\n  MissingCloseTag = 3,\n  mismatchedStartCloseTag = 4,\n  incompleteStartCloseTag = 5,\n  commentContent$1 = 35,\n  piContent$1 = 36,\n  cdataContent$1 = 37,\n  Element = 11,\n  OpenTag = 13;\n\n/* Hand-written tokenizer for XML tag matching. */\n\nfunction nameChar(ch) {\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\n}\n\nfunction isSpace(ch) {\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\n}\n\nlet cachedName = null, cachedInput = null, cachedPos = 0;\nfunction tagNameAfter(input, offset) {\n  let pos = input.pos + offset;\n  if (cachedInput == input && cachedPos == pos) return cachedName\n  while (isSpace(input.peek(offset))) offset++;\n  let name = \"\";\n  for (;;) {\n    let next = input.peek(offset);\n    if (!nameChar(next)) break\n    name += String.fromCharCode(next);\n    offset++;\n  }\n  cachedInput = input; cachedPos = pos;\n  return cachedName = name || null\n}\n\nfunction ElementContext(name, parent) {\n  this.name = name;\n  this.parent = parent;\n  this.hash = parent ? parent.hash : 0;\n  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);\n}\n\nconst elementContext = new ContextTracker({\n  start: null,\n  shift(context, term, stack, input) {\n    return term == StartTag ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  reduce(context, term) {\n    return term == Element && context ? context.parent : context\n  },\n  reuse(context, node, _stack, input) {\n    let type = node.type.id;\n    return type == StartTag || type == OpenTag\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  hash(context) { return context ? context.hash : 0 },\n  strict: false\n});\n\nconst startTag = new ExternalTokenizer((input, stack) => {\n  if (input.next != 60 /* '<' */) return\n  input.advance();\n  if (input.next == 47 /* '/' */) {\n    input.advance();\n    let name = tagNameAfter(input, 0);\n    if (!name) return input.acceptToken(incompleteStartCloseTag)\n    if (stack.context && name == stack.context.name) return input.acceptToken(StartCloseTag)\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return input.acceptToken(MissingCloseTag, -2)\n    input.acceptToken(mismatchedStartCloseTag);\n  } else if (input.next != 33 /* '!' */ && input.next != 63 /* '?' */) {\n    return input.acceptToken(StartTag)\n  }\n}, {contextual: true});\n\nfunction scanTo(type, end) {\n  return new ExternalTokenizer(input => {\n    let len = 0, first = end.charCodeAt(0);\n    scan: for (;; input.advance(), len++) {\n      if (input.next < 0) break\n      if (input.next == first) {\n        for (let i = 1; i < end.length; i++)\n          if (input.peek(i) != end.charCodeAt(i)) continue scan\n        break\n      }\n    }\n    if (len) input.acceptToken(type);\n  })\n}\n\nconst commentContent = scanTo(commentContent$1, \"-->\");\nconst piContent = scanTo(piContent$1, \"?>\");\nconst cdataContent = scanTo(cdataContent$1, \"]]>\");\n\nconst xmlHighlighting = styleTags({\n  Text: tags.content,\n  \"StartTag StartCloseTag EndTag SelfCloseEndTag\": tags.angleBracket,\n  TagName: tags.tagName,\n  \"MismatchedCloseTag/TagName\": [tags.tagName, tags.invalid],\n  AttributeName: tags.attributeName,\n  AttributeValue: tags.attributeValue,\n  Is: tags.definitionOperator,\n  \"EntityReference CharacterReference\": tags.character,\n  Comment: tags.blockComment,\n  ProcessingInst: tags.processingInstruction,\n  DoctypeDecl: tags.documentMeta,\n  Cdata: tags.special(tags.string)\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \",SOQOaOOOrOxO'#CfOzOpO'#CiO!tOaO'#CgOOOP'#Cg'#CgO!{OrO'#CrO#TOtO'#CsO#]OpO'#CtOOOP'#DS'#DSOOOP'#Cv'#CvQQOaOOOOOW'#Cw'#CwO#eOxO,59QOOOP,59Q,59QOOOO'#Cx'#CxO#mOpO,59TO#uO!bO,59TOOOP'#C{'#C{O$TOaO,59RO$[OpO'#CoOOOP,59R,59ROOOQ'#C|'#C|O$dOrO,59^OOOP,59^,59^OOOS'#C}'#C}O$lOtO,59_OOOP,59_,59_O$tOpO,59`O$|OpO,59`OOOP-E6t-E6tOOOW-E6u-E6uOOOP1G.l1G.lOOOO-E6v-E6vO%UO!bO1G.oO%UO!bO1G.oO%dOpO'#CkO%lO!bO'#CyO%zO!bO1G.oOOOP1G.o1G.oOOOP1G.w1G.wOOOP-E6y-E6yOOOP1G.m1G.mO&VOpO,59ZO&_OpO,59ZOOOQ-E6z-E6zOOOP1G.x1G.xOOOS-E6{-E6{OOOP1G.y1G.yO&gOpO1G.zO&gOpO1G.zOOOP1G.z1G.zO&oO!bO7+$ZO&}O!bO7+$ZOOOP7+$Z7+$ZOOOP7+$c7+$cO'YOpO,59VO'bOpO,59VO'jO!bO,59eOOOO-E6w-E6wO'xOpO1G.uO'xOpO1G.uOOOP1G.u1G.uO(QOpO7+$fOOOP7+$f7+$fO(YO!bO<<GuOOOP<<Gu<<GuOOOP<<G}<<G}O'bOpO1G.qO'bOpO1G.qO(eO#tO'#CnOOOO1G.q1G.qO(sOpO7+$aOOOP7+$a7+$aOOOP<<HQ<<HQOOOPAN=aAN=aOOOPAN=iAN=iO'bOpO7+$]OOOO7+$]7+$]OOOO'#Cz'#CzO({O#tO,59YOOOO,59Y,59YOOOP<<G{<<G{OOOO<<Gw<<GwOOOO-E6x-E6xOOOO1G.t1G.t\",\n  stateData: \")Z~OPQOSVOTWOVWOWWOXWOiXOxPO}TO!PUO~OuZOw]O~O^`Oy^O~OPQOQcOSVOTWOVWOWWOXWOxPO}TO!PUO~ORdO~P!SOseO|gO~OthO!OjO~O^lOy^O~OuZOwoO~O^qOy^O~O[vO`sOdwOy^O~ORyO~P!SO^{Oy^O~OseO|}O~OthO!O!PO~O^!QOy^O~O[!SOy^O~O[!VO`sOd!WOy^O~Oa!YOy^O~Oy^O[mX`mXdmX~O[!VO`sOd!WO~O^!]Oy^O~O[!_Oy^O~O[!aOy^O~O[!cO`sOd!dOy^O~O[!cO`sOd!dO~Oa!eOy^O~Oy^Oz!gO~Oy^O[ma`madma~O[!jOy^O~O[!kOy^O~O[!lO`sOd!mO~OW!pOX!pOz!rO{!pO~O[!sOy^O~OW!pOX!pOz!vO{!pO~O\",\n  goto: \"%[wPPPPPPPPPPxxP!OP!UPP!_!iP!oxxxP!u!{#R$Z$j$p$v$|PPPP%SXWORYbXRORYb_t`qru!T!U!bQ!h!YS!o!e!fR!t!nQdRRybXSORYbQYORmYQ[PRn[Q_QQkVjp_krz!R!T!X!Z!^!`!f!i!nQr`QzcQ!RlQ!TqQ!XsQ!ZtQ!^{Q!`!QQ!f!YQ!i!]R!n!eQu`S!UqrU![u!U!bR!b!TQ!q!gR!u!qQbRRxbQfTR|fQiUR!OiSXOYTaRb\",\n  nodeNames: \"⚠ StartTag StartCloseTag MissingCloseTag StartCloseTag StartCloseTag Document Text EntityReference CharacterReference Cdata Element EndTag OpenTag TagName Attribute AttributeName Is AttributeValue CloseTag SelfCloseEndTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag DoctypeDecl\",\n  maxTerm: 47,\n  context: elementContext,\n  nodeProps: [\n    [\"closedBy\", 1,\"SelfCloseEndTag EndTag\",13,\"CloseTag MissingCloseTag\"],\n    [\"openedBy\", 12,\"StartTag StartCloseTag\",19,\"OpenTag\",20,\"StartTag\"],\n    [\"isolate\", -6,13,18,19,21,22,24,\"\"]\n  ],\n  propSources: [xmlHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 8,\n  tokenData: \"Jy~R!XOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs'ssv$nvw(Zw}$n}!O,^!O!P$n!P!Q.m!Q![$n![!]0V!]!^$n!^!_3h!_!`El!`!aF_!a!bGQ!b!c$n!c!}0V!}#P$n#P#QHj#Q#R$n#R#S0V#S#T$n#T#o0V#o%W$n%W%o0V%o%p$n%p&a0V&a&b$n&b1p0V1p4U$n4U4d0V4d4e$n4e$IS0V$IS$I`$n$I`$Ib0V$Ib$Kh$n$Kh%#t0V%#t&/x$n&/x&Et0V&Et&FV$n&FV;'S0V;'S;:j3b;:j;=`&e<%l?&r$n?&r?Ah0V?Ah?BY$n?BY?Mn0V?MnO$nX$uWVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nP%dTVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_P%vP;=`<%l%_W&OT{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yW&bP;=`<%l%yX&hP;=`<%l$n_&t_VP{WyUOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ'zTzYVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_~(^ast)c![!]*g!c!}*g#R#S*g#T#o*g%W%o*g%p&a*g&b1p*g4U4d*g4e$IS*g$I`$Ib*g$Kh%#t*g&/x&Et*g&FV;'S*g;'S;:j,W?&r?Ah*g?BY?Mn*g~)fQ!Q![)l#l#m)z~)oQ!Q![)l!]!^)u~)zOX~~)}R!Q![*W!c!i*W#T#Z*W~*ZS!Q![*W!]!^)u!c!i*W#T#Z*W~*jg}!O*g!O!P*g!Q![*g![!]*g!]!^,R!c!}*g#R#S*g#T#o*g$}%O*g%W%o*g%p&a*g&b1p*g1p4U*g4U4d*g4e$IS*g$I`$Ib*g$Je$Jg*g$Kh%#t*g&/x&Et*g&FV;'S*g;'S;:j,W?&r?Ah*g?BY?Mn*g~,WOW~~,ZP;=`<%l*gZ,eYVP{WOr$nrs%_sv$nw}$n}!O-T!O!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ-[YVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a-z!a;'S$n;'S;=`&e<%lO$nZ.TW|QVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n].tYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a/d!a;'S$n;'S;=`&e<%lO$n]/mWdSVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_0b!O`S^QVP{WOr$nrs%_sv$nw}$n}!O0V!O!P0V!P!Q$n!Q![0V![!]0V!]!^$n!^!_%y!_!c$n!c!}0V!}#R$n#R#S0V#S#T$n#T#o0V#o$}$n$}%O0V%O%W$n%W%o0V%o%p$n%p&a0V&a&b$n&b1p0V1p4U0V4U4d0V4d4e$n4e$IS0V$IS$I`$n$I`$Ib0V$Ib$Je$n$Je$Jg0V$Jg$Kh$n$Kh%#t0V%#t&/x$n&/x&Et0V&Et&FV$n&FV;'S0V;'S;:j3b;:j;=`&e<%l?&r$n?&r?Ah0V?Ah?BY$n?BY?Mn0V?MnO$n_3eP;=`<%l0VX3mW{WOq%yqr4Vsv%yw!a%y!a!bEU!b;'S%y;'S;=`&_<%lO%yX4[]{WOr%ysv%yw}%y}!O5T!O!f%y!f!g6V!g!}%y!}#O;f#O#W%y#W#XAr#X;'S%y;'S;=`&_<%lO%yX5YV{WOr%ysv%yw}%y}!O5o!O;'S%y;'S;=`&_<%lO%yX5vT}P{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX6[V{WOr%ysv%yw!q%y!q!r6q!r;'S%y;'S;=`&_<%lO%yX6vV{WOr%ysv%yw!e%y!e!f7]!f;'S%y;'S;=`&_<%lO%yX7bV{WOr%ysv%yw!v%y!v!w7w!w;'S%y;'S;=`&_<%lO%yX7|V{WOr%ysv%yw!{%y!{!|8c!|;'S%y;'S;=`&_<%lO%yX8hV{WOr%ysv%yw!r%y!r!s8}!s;'S%y;'S;=`&_<%lO%yX9SV{WOr%ysv%yw!g%y!g!h9i!h;'S%y;'S;=`&_<%lO%yX9nX{WOr9irs:Zsv9ivw:Zw!`9i!`!a:x!a;'S9i;'S;=`;`<%lO9iP:^TO!`:Z!`!a:m!a;'S:Z;'S;=`:r<%lO:ZP:rOiPP:uP;=`<%l:ZX;PTiP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX;cP;=`<%l9iX;kX{WOr%ysv%yw!e%y!e!f<W!f#V%y#V#W?f#W;'S%y;'S;=`&_<%lO%yX<]V{WOr%ysv%yw!f%y!f!g<r!g;'S%y;'S;=`&_<%lO%yX<wV{WOr%ysv%yw!c%y!c!d=^!d;'S%y;'S;=`&_<%lO%yX=cV{WOr%ysv%yw!v%y!v!w=x!w;'S%y;'S;=`&_<%lO%yX=}V{WOr%ysv%yw!c%y!c!d>d!d;'S%y;'S;=`&_<%lO%yX>iV{WOr%ysv%yw!}%y!}#O?O#O;'S%y;'S;=`&_<%lO%yX?VT{WxPOr%ysv%yw;'S%y;'S;=`&_<%lO%yX?kV{WOr%ysv%yw#W%y#W#X@Q#X;'S%y;'S;=`&_<%lO%yX@VV{WOr%ysv%yw#T%y#T#U@l#U;'S%y;'S;=`&_<%lO%yX@qV{WOr%ysv%yw#h%y#h#iAW#i;'S%y;'S;=`&_<%lO%yXA]V{WOr%ysv%yw#T%y#T#U>d#U;'S%y;'S;=`&_<%lO%yXAwV{WOr%ysv%yw#c%y#c#dB^#d;'S%y;'S;=`&_<%lO%yXBcV{WOr%ysv%yw#V%y#V#WBx#W;'S%y;'S;=`&_<%lO%yXB}V{WOr%ysv%yw#h%y#h#iCd#i;'S%y;'S;=`&_<%lO%yXCiV{WOr%ysv%yw#m%y#m#nDO#n;'S%y;'S;=`&_<%lO%yXDTV{WOr%ysv%yw#d%y#d#eDj#e;'S%y;'S;=`&_<%lO%yXDoV{WOr%ysv%yw#X%y#X#Y9i#Y;'S%y;'S;=`&_<%lO%yXE]T!PP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yZEuWaQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_FhW[UVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZGXYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aGw!a;'S$n;'S;=`&e<%lO$nZHQW!OQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZHqYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_#P$n#P#QIa#Q;'S$n;'S;=`&e<%lO$nZIhYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aJW!a;'S$n;'S;=`&e<%lO$nZJaWwQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n\",\n  tokenizers: [startTag, commentContent, piContent, cdataContent, 0, 1, 2, 3],\n  topRules: {\"Document\":[0,6]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/xml';\nimport { syntaxTree, LRLanguage, indentNodeProp, foldNodeProp, bracketMatchingHandle, LanguageSupport } from '@codemirror/language';\nimport { EditorSelection } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\n\nfunction tagName(doc, tag) {\n    let name = tag && tag.getChild(\"TagName\");\n    return name ? doc.sliceString(name.from, name.to) : \"\";\n}\nfunction elementName$1(doc, tree) {\n    let tag = tree && tree.firstChild;\n    return !tag || tag.name != \"OpenTag\" ? \"\" : tagName(doc, tag);\n}\nfunction attrName(doc, tag, pos) {\n    let attr = tag && tag.getChildren(\"Attribute\").find(a => a.from <= pos && a.to >= pos);\n    let name = attr && attr.getChild(\"AttributeName\");\n    return name ? doc.sliceString(name.from, name.to) : \"\";\n}\nfunction findParentElement(tree) {\n    for (let cur = tree && tree.parent; cur; cur = cur.parent)\n        if (cur.name == \"Element\")\n            return cur;\n    return null;\n}\nfunction findLocation(state, pos) {\n    var _a;\n    let at = syntaxTree(state).resolveInner(pos, -1), inTag = null;\n    for (let cur = at; !inTag && cur.parent; cur = cur.parent)\n        if (cur.name == \"OpenTag\" || cur.name == \"CloseTag\" || cur.name == \"SelfClosingTag\" || cur.name == \"MismatchedCloseTag\")\n            inTag = cur;\n    if (inTag && (inTag.to > pos || inTag.lastChild.type.isError)) {\n        let elt = inTag.parent;\n        if (at.name == \"TagName\")\n            return inTag.name == \"CloseTag\" || inTag.name == \"MismatchedCloseTag\"\n                ? { type: \"closeTag\", from: at.from, context: elt }\n                : { type: \"openTag\", from: at.from, context: findParentElement(elt) };\n        if (at.name == \"AttributeName\")\n            return { type: \"attrName\", from: at.from, context: inTag };\n        if (at.name == \"AttributeValue\")\n            return { type: \"attrValue\", from: at.from, context: inTag };\n        let before = at == inTag || at.name == \"Attribute\" ? at.childBefore(pos) : at;\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartTag\")\n            return { type: \"openTag\", from: pos, context: findParentElement(elt) };\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartCloseTag\" && before.to <= pos)\n            return { type: \"closeTag\", from: pos, context: elt };\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"Is\")\n            return { type: \"attrValue\", from: pos, context: inTag };\n        if (before)\n            return { type: \"attrName\", from: pos, context: inTag };\n        return null;\n    }\n    else if (at.name == \"StartCloseTag\") {\n        return { type: \"closeTag\", from: pos, context: at.parent };\n    }\n    while (at.parent && at.to == pos && !((_a = at.lastChild) === null || _a === void 0 ? void 0 : _a.type.isError))\n        at = at.parent;\n    if (at.name == \"Element\" || at.name == \"Text\" || at.name == \"Document\")\n        return { type: \"tag\", from: pos, context: at.name == \"Element\" ? at : findParentElement(at) };\n    return null;\n}\nclass Element {\n    constructor(spec, attrs, attrValues) {\n        this.attrs = attrs;\n        this.attrValues = attrValues;\n        this.children = [];\n        this.name = spec.name;\n        this.completion = Object.assign(Object.assign({ type: \"type\" }, spec.completion || {}), { label: this.name });\n        this.openCompletion = Object.assign(Object.assign({}, this.completion), { label: \"<\" + this.name });\n        this.closeCompletion = Object.assign(Object.assign({}, this.completion), { label: \"</\" + this.name + \">\", boost: 2 });\n        this.closeNameCompletion = Object.assign(Object.assign({}, this.completion), { label: this.name + \">\" });\n        this.text = spec.textContent ? spec.textContent.map(s => ({ label: s, type: \"text\" })) : [];\n    }\n}\nconst Identifier = /^[:\\-\\.\\w\\u00b7-\\uffff]*$/;\nfunction attrCompletion(spec) {\n    return Object.assign(Object.assign({ type: \"property\" }, spec.completion || {}), { label: spec.name });\n}\nfunction valueCompletion(spec) {\n    return typeof spec == \"string\" ? { label: `\"${spec}\"`, type: \"constant\" }\n        : /^\"/.test(spec.label) ? spec\n            : Object.assign(Object.assign({}, spec), { label: `\"${spec.label}\"` });\n}\n/**\nCreate a completion source for the given schema.\n*/\nfunction completeFromSchema(eltSpecs, attrSpecs) {\n    let allAttrs = [], globalAttrs = [];\n    let attrValues = Object.create(null);\n    for (let s of attrSpecs) {\n        let completion = attrCompletion(s);\n        allAttrs.push(completion);\n        if (s.global)\n            globalAttrs.push(completion);\n        if (s.values)\n            attrValues[s.name] = s.values.map(valueCompletion);\n    }\n    let allElements = [], topElements = [];\n    let byName = Object.create(null);\n    for (let s of eltSpecs) {\n        let attrs = globalAttrs, attrVals = attrValues;\n        if (s.attributes)\n            attrs = attrs.concat(s.attributes.map(s => {\n                if (typeof s == \"string\")\n                    return allAttrs.find(a => a.label == s) || { label: s, type: \"property\" };\n                if (s.values) {\n                    if (attrVals == attrValues)\n                        attrVals = Object.create(attrVals);\n                    attrVals[s.name] = s.values.map(valueCompletion);\n                }\n                return attrCompletion(s);\n            }));\n        let elt = new Element(s, attrs, attrVals);\n        byName[elt.name] = elt;\n        allElements.push(elt);\n        if (s.top)\n            topElements.push(elt);\n    }\n    if (!topElements.length)\n        topElements = allElements;\n    for (let i = 0; i < allElements.length; i++) {\n        let s = eltSpecs[i], elt = allElements[i];\n        if (s.children) {\n            for (let ch of s.children)\n                if (byName[ch])\n                    elt.children.push(byName[ch]);\n        }\n        else {\n            elt.children = allElements;\n        }\n    }\n    return cx => {\n        var _a;\n        let { doc } = cx.state, loc = findLocation(cx.state, cx.pos);\n        if (!loc || (loc.type == \"tag\" && !cx.explicit))\n            return null;\n        let { type, from, context } = loc;\n        if (type == \"openTag\") {\n            let children = topElements;\n            let parentName = elementName$1(doc, context);\n            if (parentName) {\n                let parent = byName[parentName];\n                children = (parent === null || parent === void 0 ? void 0 : parent.children) || allElements;\n            }\n            return {\n                from,\n                options: children.map(ch => ch.completion),\n                validFor: Identifier\n            };\n        }\n        else if (type == \"closeTag\") {\n            let parentName = elementName$1(doc, context);\n            return parentName ? {\n                from,\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == \">\" ? 1 : 0),\n                options: [((_a = byName[parentName]) === null || _a === void 0 ? void 0 : _a.closeNameCompletion) || { label: parentName + \">\", type: \"type\" }],\n                validFor: Identifier\n            } : null;\n        }\n        else if (type == \"attrName\") {\n            let parent = byName[tagName(doc, context)];\n            return {\n                from,\n                options: (parent === null || parent === void 0 ? void 0 : parent.attrs) || globalAttrs,\n                validFor: Identifier\n            };\n        }\n        else if (type == \"attrValue\") {\n            let attr = attrName(doc, context, from);\n            if (!attr)\n                return null;\n            let parent = byName[tagName(doc, context)];\n            let values = ((parent === null || parent === void 0 ? void 0 : parent.attrValues) || attrValues)[attr];\n            if (!values || !values.length)\n                return null;\n            return {\n                from,\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == '\"' ? 1 : 0),\n                options: values,\n                validFor: /^\"[^\"]*\"?$/\n            };\n        }\n        else if (type == \"tag\") {\n            let parentName = elementName$1(doc, context), parent = byName[parentName];\n            let closing = [], last = context && context.lastChild;\n            if (parentName && (!last || last.name != \"CloseTag\" || tagName(doc, last) != parentName))\n                closing.push(parent ? parent.closeCompletion : { label: \"</\" + parentName + \">\", type: \"type\", boost: 2 });\n            let options = closing.concat(((parent === null || parent === void 0 ? void 0 : parent.children) || (context ? allElements : topElements)).map(e => e.openCompletion));\n            if (context && (parent === null || parent === void 0 ? void 0 : parent.text.length)) {\n                let openTag = context.firstChild;\n                if (openTag.to > cx.pos - 20 && !/\\S/.test(cx.state.sliceDoc(openTag.to, cx.pos)))\n                    options = options.concat(parent.text);\n            }\n            return {\n                from,\n                options,\n                validFor: /^<\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/\n            };\n        }\n        else {\n            return null;\n        }\n    };\n}\n\n/**\nA language provider based on the [Lezer XML\nparser](https://github.com/lezer-parser/xml), extended with\nhighlighting and indentation information.\n*/\nconst xmlLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"xml\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Element(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"OpenTag CloseTag SelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                Element(subtree) {\n                    let first = subtree.firstChild, last = subtree.lastChild;\n                    if (!first || first.name != \"OpenTag\")\n                        return null;\n                    return { from: first.to, to: last.name == \"CloseTag\" ? last.from : subtree.to };\n                }\n            }),\n            /*@__PURE__*/bracketMatchingHandle.add({\n                \"OpenTag CloseTag\": node => node.getChild(\"TagName\")\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"<!--\", close: \"-->\" } },\n        indentOnInput: /^\\s*<\\/$/\n    }\n});\n/**\nXML language support. Includes schema-based autocompletion when\nconfigured.\n*/\nfunction xml(conf = {}) {\n    let support = [xmlLanguage.data.of({\n            autocomplete: completeFromSchema(conf.elements || [], conf.attributes || [])\n        })];\n    if (conf.autoCloseTags !== false)\n        support.push(autoCloseTags);\n    return new LanguageSupport(xmlLanguage, support);\n}\nfunction elementName(doc, tree, max = doc.length) {\n    if (!tree)\n        return \"\";\n    let tag = tree.firstChild;\n    let name = tag && tag.getChild(\"TagName\");\n    return name ? doc.sliceString(name.from, Math.min(name.to, max)) : \"\";\n}\n/**\nExtension that will automatically insert close tags when a `>` or\n`/` is typed.\n*/\nconst autoCloseTags = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, text, insertTransaction) => {\n    if (view.composing || view.state.readOnly || from != to || (text != \">\" && text != \"/\") ||\n        !xmlLanguage.isActiveAt(view.state, from, -1))\n        return false;\n    let base = insertTransaction(), { state } = base;\n    let closeTags = state.changeByRange(range => {\n        var _a, _b, _c;\n        let { head } = range;\n        let didType = state.doc.sliceString(head - 1, head) == text;\n        let after = syntaxTree(state).resolveInner(head, -1), name;\n        if (didType && text == \">\" && after.name == \"EndTag\") {\n            let tag = after.parent;\n            if (((_b = (_a = tag.parent) === null || _a === void 0 ? void 0 : _a.lastChild) === null || _b === void 0 ? void 0 : _b.name) != \"CloseTag\" &&\n                (name = elementName(state.doc, tag.parent, head))) {\n                let to = head + (state.doc.sliceString(head, head + 1) === \">\" ? 1 : 0);\n                let insert = `</${name}>`;\n                return { range, changes: { from: head, to, insert } };\n            }\n        }\n        else if (didType && text == \"/\" && after.name == \"StartCloseTag\") {\n            let base = after.parent;\n            if (after.from == head - 2 && ((_c = base.lastChild) === null || _c === void 0 ? void 0 : _c.name) != \"CloseTag\" &&\n                (name = elementName(state.doc, base, head))) {\n                let to = head + (state.doc.sliceString(head, head + 1) === \">\" ? 1 : 0);\n                let insert = `${name}>`;\n                return {\n                    range: EditorSelection.cursor(head + insert.length, -1),\n                    changes: { from: head, to, insert }\n                };\n            }\n        }\n        return { range };\n    });\n    if (closeTags.changes.empty)\n        return false;\n    view.dispatch([\n        base,\n        state.update(closeTags, {\n            userEvent: \"input.complete\",\n            scrollIntoView: true\n        })\n    ]);\n    return true;\n});\n\nexport { autoCloseTags, completeFromSchema, xml, xmlLanguage };\n"],"names":["nameChar","ch","cachedName","cachedInput","cachedPos","tagNameAfter","input","offset","pos","peek","name","next","String","fromCharCode","ElementContext","parent","this","hash","i","length","charCodeAt","elementContext","start","shift","context","term","stack","reduce","reuse","node","_stack","type","id","strict","startTag","advance","acceptToken","cx","contextual","scanTo","end","len","first","scan","commentContent","piContent","cdataContent","xmlHighlighting","Text","content","angleBracket","TagName","tagName","invalid","AttributeName","attributeName","AttributeValue","attributeValue","Is","definitionOperator","character","Comment","blockComment","ProcessingInst","processingInstruction","DoctypeDecl","documentMeta","Cdata","special","string","parser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","doc","tag","getChild","sliceString","from","to","elementName$1","tree","firstChild","findParentElement","cur","constructor","spec","attrs","attrValues","children","completion","Object","assign","label","openCompletion","closeCompletion","boost","closeNameCompletion","text","textContent","map","s","Identifier","attrCompletion","valueCompletion","test","completeFromSchema","eltSpecs","attrSpecs","allAttrs","globalAttrs","create","push","global","values","allElements","topElements","byName","attrVals","attributes","concat","find","a","elt","top","_a","state","loc","at","resolveInner","inTag","lastChild","isError","before","childBefore","findLocation","explicit","parentName","options","validFor","attr","getChildren","attrName","closing","last","e","openTag","sliceDoc","xmlLanguage","define","configure","props","add","Element","closed","textAfter","lineIndent","unit","column","subtree","languageData","commentTokens","block","open","close","indentOnInput","xml","conf","support","data","of","autocomplete","elements","autoCloseTags","elementName","max","Math","min","inputHandler","view","insertTransaction","composing","readOnly","isActiveAt","base","closeTags","changeByRange","range","_b","_c","head","didType","after","changes","insert","cursor","empty","dispatch","update","userEvent","scrollIntoView"],"sourceRoot":""}